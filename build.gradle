plugins {
  id 'java'
  alias libs.plugins.springframework.boot
  alias libs.plugins.springframework.depManagement
  alias libs.plugins.cadixdev.licenser
}

group = 'org.example'
version = '1.0.0'

repositories {
  mavenCentral()
}

dependencies {
  implementation libs.jetbrains.annotations

  // junit
  testImplementation libs.bundles.junit
  testRuntimeOnly libs.junit.jupiter.engine

  // mockito
  testImplementation libs.bundles.mockito

  // lombok
  compileOnly libs.lombok
  annotationProcessor libs.lombok
  testCompileOnly libs.lombok
  testAnnotationProcessor libs.lombok

  // Spring
  implementation libs.postgresql
  testImplementation libs.h2db // h2 database is used during the test
  testImplementation "org.springframework.boot:spring-boot-starter-test"
  testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc"
  implementation 'org.springframework.boot:spring-boot-starter'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation "org.springframework.boot:spring-boot-starter-data-jpa"
  implementation 'org.springframework.boot:spring-boot-starter-mustache'
  // implementation "org.springframework.boot:spring-boot-starter-security"
  // implementation "org.springframework.boot:spring-boot-starter-hateoas"
  // implementation "org.springframework.boot:spring-boot-starter-validation"
  // implementation "org.springframework.boot:spring-boot-starter-mail"
}

test {
  useJUnitPlatform()
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
  sourceCompatibility = "17"
}

tasks.withType(JavaCompile).configureEach {
  it.options.encoding = 'UTF-8'
  it.options.release.set(17)
}

tasks.withType(GenerateModuleMetadata).configureEach {
  enabled = false
}

license {
  header = project.rootProject.file('license.md')
}
